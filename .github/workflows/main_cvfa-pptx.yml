# Builds and deploys Python Azure Functions by vendoring deps into .python_packages
# so the app has Jinja2/Playwright/etc at runtime (no Oryx dependency).

name: Build and deploy Python project to Azure Function App - cvfa-pptx-acgjage0g8csb2cq

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'    # repo root contains host.json
  PYTHON_VERSION: '3.10'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # Vendor dependencies directly into .python_packages for Azure Functions runtime
      - name: Vendor Python dependencies into .python_packages
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt -t .python_packages/lib/site-packages
          python -c "import jinja2, azure.functions; print('âœ… vendored:', jinja2.__version__)"

      # Create a clean deployment zip (exclude venv/.git/.github)
      - name: Zip artifact for deployment
        run: |
          zip -r release.zip . \
            -x "venv/*" ".venv/*" ".git/*" ".github/*" ".pytest_cache/*" "__pycache__/*" "*.PublishSettings" "local.settings.json"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: |
          unzip -q release.zip
          rm -f release.zip

      - name: Deploy to Azure Functions
        uses: Azure/functions-action@v1
        id: deploy-to-function
        with:
          app-name: 'cvfa-pptx-acgjage0g8csb2cq'   # <-- your exact Function App name
          slot-name: 'Production'
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_09DEA36CAAE04DD4AD88C7371465B57F }}
